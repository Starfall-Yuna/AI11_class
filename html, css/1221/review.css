/* 
Css :: 화면 스타일 담당 
선택자 { 속성명1: 속성값1; 선언문들 ... }

1. 내부 CSS (<head> 태그 안에 <style> 삽입하여 스타일 적용)
2. 인라인 CSS (각 태그마다 style 속성을 직접 삽입)
3. 외부 CSS (CSS 파일을 별도로 만들고 html 파일에 적용 -> link 태그 사용)

=> css 적용 순서는, 위에서 아래 순으로 적용 
(만약 속성값들끼리 충돌이 생기면, 아래에서 선언된 값이 우선적으로 적용)
*/

/* 선택자 :: 특정 요소를 "선택"하는 구문 */
/* 
*{
    전체 선택자 :: 스타일 적용하는 html 모든 태그 적용
    color: red;
    border: 3px solid darkmagenta;
} 
*/

/* 
id 선택자(#) :: 특정 id값을 갖는 태그 선택
class 선택자(.) :: 특정 class값을 포함하는 태그 선택
*/
.pTag{
    border:3px solid aqua;
}
/* #first_pTag{
    background-color:beige;
} */

/* 속성 선택자
[속성명] :: 해당 속성에 대해 값을 가지고 있는 태그 전체 선택
[속성명=속성값] :: 특정 속성에 대해 특정 값을 가지고 있는 태그 선택
*/
[for]{
    color:blue;
}
label[for="choi"]{
    color:cadetblue;
}

/* 
후손 선택자 :: [선택자1] [선택자2]  => [선택자1] 아래로 있는 [선택자2] 모두 선택
자손 선택자 :: [선택자1]>[선택자2]  => [선택자1] "바로 아래로 있는" [선택자2] 선택
*/
div p{
    font-style:italic;
}
div>p{
    font-size:150%;
}

/* 반응 선택자 :: :hover, :active */
label:hover{
    border: 2px solid salmon;
}
label:active{
    color:firebrick;
}

/* 동위 선택자 :: +, ~
[선택자1] + [선택자2] :: [선택자1] 바로 뒤에 있는 [선택자2]만 선택
[선택자1] ~ [선택자2] :: [선택자1] 뒤에 있는 모든 [선택자2] 선택
*/
h1 + p {
    background-color:fuchsia;
}

/* 전환(transition) :: 자연스럽게 전환하는 스타일 적용 */
label{
    transition: all 2s;
    transition-timing-function:ease-in-out;
    transition-delay: 1s;
}